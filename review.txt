MemeMe 1.0

Meets Specifications

General: 6/6
-- Control statements are used appropriately.
-- Potentially repetitive blocks of code are effectively abstracted into reusable methods.
-- Arguments and return values are procedure-appropriate.
-- Code is easy to understand. Any code that may be hard to follow is commented effectively.
-- User interface elements, images, and generated memes are properly displayed and function as expected in portrait as well as landscape orientations.
-- Code adheres to Swift naming and style conventions.

Meme Editor: 12/12
-- The Meme Editor view has a toolbar with two buttons: one that allows user to open the Photo Album to select an image, one that launches the camera.
-- The app displays the camera when the Camera button is pressed on a phone.
-- The Camera button is disabled when app is run on devices without a camera, such as the simulator.
-- The chosen image from the camera or the photo album is displayed and scaled properly with AspectFit to fit the device screen.
-- The app displays the image picker when the Album button is pressed.
-- Text fields are provided for top and bottom text.
-- The font and style used to display the meme text is easy to read: bold, all caps, white with a black outline, and shrink to fit.
-- The text field that the user is currently editing remains fully visible with the keyboard on screen. For the bottom text field this is achieved by moving the entire view up to keep the text field on screen, then back after the keyboard is dismissed.
-- The app has a social share button that uses the “Action” icon built into iOS.
-- The share button launches the Activity View.
-- The meme is saved before the Activity View Controller is dismissed.
-- The Meme model is a struct that includes:
    two strings representing the top and bottom text
    the original image
    a memed image combining image and text

MemeEditorViewController.swift:
line 119 -- func createImagePickerController: suggested that pickerController.allows editing be set to false instead of true so that no images were inadvertanly cropped. I have set this to false in the updated project. 
line 168 -- func chooseImageFromCameraRoll: Awesome: The code that creates an image picker is abstracted!
line 190 -- func share: Awesome: good job. You can use an underscore for parameters you are not using, (_, success, _, _); I have reflected this change in the updated project.
line 214 -- func changeFont: Awesome: cool feature!